name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint:check

    - name: Run type checking
      run: npm run type-check

    - name: Run formatting check
      run: npm run format:check

    - name: Run unit tests (development)
      run: NODE_ENV=development npm run test:cov

    - name: Run unit tests (staging)
      run: NODE_ENV=staging npm run test:cov

    - name: Run unit tests (production)
      run: NODE_ENV=production npm run test:cov

    - name: Run e2e tests
      run: npm run test:e2e

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/

  deploy-development:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'

    steps:
    - name: Deploy to Vercel Development
      run: |
        curl -X POST "https://api.vercel.com/v1/integrations/deploy/prj_re9pMsgKE3xxiD11YYNcplSYnAQH/BjA9LeveAP"
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Deploy to Vercel Production
      run: |
        curl -X POST "https://api.vercel.com/v1/integrations/deploy/prj_re9pMsgKE3xxiD11YYNcplSYnAQH/JRaS83RZSw"
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
